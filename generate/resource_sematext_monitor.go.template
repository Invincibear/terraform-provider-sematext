package sematext

/*
	Note: Generated file, any edits will be overwritten!
	Correct way to alter is to edit generate/resource_sematext_monitor.go.template
	Then run generate/generate.sh
*/

import (
    "strings"

	"github.com/hashicorp/terraform-plugin-sdk/helper/schema"
)

// resourceSematextMonitor<<MONITOR_TYPE>> TODO Doc Comment
func resourceSematextMonitor<<MONITOR_TYPE>>() *schema.Resource {

	fieldSchema := MonitorSchemaCommon

	// TODO AWS metadata replacement target

	return &schema.Resource{
		Create: resourceMonitorCreate<<MONITOR_TYPE>>,
		Read:   resourceMonitorRead<<MONITOR_TYPE>>,
		Update: resourceMonitorUpdate<<MONITOR_TYPE>>,
		Delete: resourceMonitorDelete<<MONITOR_TYPE>>,
		Exists: resourceMonitorExists<<MONITOR_TYPE>>,
		Schema: fieldSchema,
	}
}

// resourceMonitorCreate<<MONITOR_TYPE>> TODO Doc Comment
func resourceMonitorCreate<<MONITOR_TYPE>>(d *schema.ResourceData, meta interface{}) error {
	d.Set("app_type", strings.ToLower("<<MONITOR_TYPE>>"))
	return CommonMonitorCreate(d, meta)
}

// resourceMonitorRead<<MONITOR_TYPE>> TODO Doc Comment
func resourceMonitorRead<<MONITOR_TYPE>>(d *schema.ResourceData, meta interface{}) error {
	d.Set("app_type", strings.ToLower("<<MONITOR_TYPE>>"))
	return CommonMonitorRead(d, meta)
}

// resourceMonitorUpdate<<MONITOR_TYPE>> TODO Doc Comment
func resourceMonitorUpdate<<MONITOR_TYPE>>(d *schema.ResourceData, meta interface{}) error {
	d.Set("app_type", strings.ToLower("<<MONITOR_TYPE>>"))
	return CommonMonitorUpdate(d, meta)
}

// resourceMonitorDelete<<MONITOR_TYPE>> TODO Doc Comment
func resourceMonitorDelete<<MONITOR_TYPE>>(d *schema.ResourceData, meta interface{}) error { // TODO Check default is respected
	d.Set("app_type", strings.ToLower("<<MONITOR_TYPE>>"))
	return CommonMonitorDelete(d, meta)
}

// TODO Consider necessity for an app edit-version to catch edit-version mis-match back into state.
// resourceMonitorExists<<MONITOR_TYPE>> TODO Doc Comment
func resourceMonitorExists<<MONITOR_TYPE>>(d *schema.ResourceData, meta interface{}) (b bool, e error) {
	d.Set("app_type", strings.ToLower("<<MONITOR_TYPE>>"))
	return CommonMonitorExists(d, meta)
}

// resourceSematextMonitorImport<<MONITOR_TYPE>> TODO Doc Comment
func resourceSematextMonitorImport<<MONITOR_TYPE>>(d *schema.ResourceData, meta interface{}) ([]*schema.ResourceData, error) {
	d.Set("app_type", strings.ToLower("<<MONITOR_TYPE>>"))
	return CommonMonitorImport(d, meta)
}
